name: Articles
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/articles
    metadata:
      groupName: Articles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all articles with pagination.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of items per page. Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Sample Article",
                "content": "This is a sample article.",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            ],
            "links": {
              "first": "http://your-app-url/api/articles?page=1",
              "last": "http://your-app-url/api/articles?page=2",
              "prev": null,
              "next": "http://your-app-url/api/articles?page=2"
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 2,
              "path": "http://your-app-url/api/articles",
              "per_page": 5,
              "to": 5,
              "total": 10
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/articles
    metadata:
      groupName: Articles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new article.'
      description: 'Create a new article with the provided title and content.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the article.'
        required: true
        example: '"New Article"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      content:
        name: content
        description: 'The content of the article.'
        required: true
        example: '"This is the content of the new article."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image file associated with the article.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: '"New Article"'
      content: '"This is the content of the new article."'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "id": 2,
            "title": "New Article",
            "content": "This is the content of the new article.",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/articles/{id}'
    metadata:
      groupName: Articles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific article.'
      description: 'Retrieve a specific article by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Sample Article",
            "content": "This is a sample article.",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Record not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/articles/{id}'
    metadata:
      groupName: Articles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an article.'
      description: 'Update the specified article with new data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the article.'
        required: false
        example: '"Updated Article"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      content:
        name: content
        description: 'The new content of the article.'
        required: false
        example: '"This is the updated content."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image file associated with the article.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: '"Updated Article"'
      content: '"This is the updated content."'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Updated Article",
            "content": "This is the updated content.",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Record not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/articles/{id}'
    metadata:
      groupName: Articles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an article.'
      description: 'Remove the specified article from the database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
            "message": "The article was successfully deleted."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Record not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
